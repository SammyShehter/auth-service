version: "3.8"
services:
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOST=redis
    restart: always
    ports:
      - "6380:8081"
    depends_on:
      - redis
  redis:
    image: redis:alpine
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data
  mongo:
        image: mongo
        container_name: "mongo-container"
        environment:
            - MONGO_INITDB_DATABASE=Users
            - MONGO_INITDB_ROOT_USERNAME=sammy
            - MONGO_INITDB_ROOT_PASSWORD=123456
        volumes:
            - ./data:/data/db
        ports:
            - "27017:27017"

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 22181:2181
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  ## kafka-ui:
  #   image: "obsidiandynamics/kafdrop:latest"
  #   ports:
  #     - "9001:9000"
  #  environment:
  #    KAFKA_BROKERCONNECT: kafka:9092,localhost:29092
  #    JVM_OPTS: -Xms32M -Xmx64M
  #    SERVER_SERVLET_CONTEXTPATH: /
volumes:
  redis-data:
